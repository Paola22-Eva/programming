use std::fs::File;//use - команда для импорта моулей из библиотеки, std - стандартная библиотека, fs - подмодуль std для доступа к функциям для работы с файлами, File - структура внутри fs для предоставления методов для работы с файлами
use std::io::{self, Read};//io - предоставляет функциональность для работы с вводом и выводом данных в Rust, self позволяет использовать весь модуль io без необходимости указывать std::io::,

fn main() -> io::Result<()> {//io::Result<()> - указывает, что функция может завершится ошибкой, а в случае отсутствия ошибок не возвращает ничего
    let mut file = File::open("C:/Users/валера/Desktop/Практика/5 семестр/Человеко-машинные интерфейсы и ЭВМ/ЭВМ/Задание.txt")?;//вызов метода open для открытия файла для чтения, ? - для потенциальных ошибок (проброс ошибок) нужен, так как операции с файлами могут завершится ошибками.

    //cоздание строки, где будут хранится данные с файла
    let mut contents = String::new();

    //счивание всего файла в одну строку
    file.read_to_string(&mut contents)?;

    let lines: Vec<&str> = contents.lines().collect();//lines() - возвращает итератор  для обработки строк, collect() - нужен для сбора строк из итератора в вектор, &str - ссылка на срез строк

    //создание векторов для имен и возрастов
    let mut names: Vec<String> = Vec::new();
    let mut ages: Vec<String> = Vec::new();

    //цикл 
    for line in lines {
        let parts: Vec<&str> = line.split_whitespace().collect();//split_whitespace() деление строк по пробелам
        
        //добавление именей и возрастов в соответствующие векторы
        if parts.len() == 2 {
            names.push(parts[0].to_string());
            ages.push(parts[1].to_string());//to_string() - преобразование значений в строку типа String
        }
    }
    println!("Имя: {}", names.join(" "));
    println!("Возраст: {}", ages.join(" "));// join(" ") - объединение элементов вектора в строку с пробелами

    Ok(())//указывает на успешное завершения операции, но результата нет
}